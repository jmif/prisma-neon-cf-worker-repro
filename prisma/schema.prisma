generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserSubscriptionStatus {
  active
  none
}

model User {
  id          String  @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chargebeeId String? @unique

  email     String  @unique
  firstName String?
  lastName  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  licenses      UserLicense[]
  subscriptions UserSubscription[]

  @@map("users")
}

enum LicenseType {
  trial
  standard
}

model UserLicense {
  id     String @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId String @db.Uuid

  licenseType LicenseType
  key         String
  expiresAt   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_licenses")
}

model UserSubscription {
  id          String @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chargebeeId String @unique

  status             String?
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?

  userId String @db.Uuid

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_subscriptions")
}
